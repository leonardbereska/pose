import argparse
import matplotlib as mp
mp.use('Agg')
from matplotlib import pyplot as plt
saved_ = '/export/home/lbereska/saved'
import numpy as np
import os.path as osp
# Pose results
# patrick 25
vu25 = [ 0.,          0.36508997, 0.52876227, 0.68141767, 0.75390949, 0.82824973, 0.86954198, 0.89432388, 0.90938386, 0.91870502, 0.92858233, 0.93482007,0.94083152, 0.94476281, 0.94797983, 0.95055616, 0.95286805, 0.95567067,0.95751091, 0.95945202, 0.960747,   0.96219193, 0.96353053, 0.96510905,0.96648037, 0.96749182, 0.96877863, 0.96963468, 0.97101418, 0.97206925,0.97292257, 0.97364504, 0.97433206, 0.9751663,  0.97580698, 0.97660578,0.97719466, 0.97774264, 0.97833424, 0.97906216]

do25=[ 0.,         0.15182109  ,0.26730756, 0.40188996, 0.4830272,  0.57877412,  0.64439899, 0.6899625,  0.71958001, 0.73934956, 0.76375264, 0.78051408, 0.79738188, 0.80840799, 0.81862958, 0.82696121, 0.83482103, 0.84318811, 0.84948524, 0.85604145 ,0.86096134 ,0.86696666 ,0.87258471 ,0.87887912, 0.88401991, 0.88783528 ,0.89203518 ,0.89564601, 0.90065044 ,0.90438399, 0.90787482 ,0.91054476 ,0.91317652 ,0.91594191, 0.91868276 ,0.92184632, 0.92401718 ,0.92660803 ,0.92887162 ,0.93198882]
# flipped 2098 of 14667
do25_flip = [ 0.,         0.15906457, 0.28201814, 0.42644849, 0.51436558, 0.61897048, 0.69116793, 0.74161587, 0.77442694, 0.79607282, 0.82243404, 0.84032181, 0.85798595, 0.86913479, 0.87946001, 0.8876171,  0.89511693, 0.90267403, 0.90777119, 0.91290652, 0.91677098, 0.92107725, 0.92459262, 0.92821163, 0.93109975, 0.93327333, 0.93553419, 0.93734779, 0.93962501, 0.94133224, 0.94290584, 0.94420672, 0.94547215, 0.94672667, 0.94793755, 0.94913752, 0.94995023, 0.95082021, 0.95155928, 0.95236381]
vu18 = [ 0.,         0.45625454, 0.63878665, 0.79106083, 0.85227342, 0.90889676, 0.93255483, 0.94492154, 0.95115791, 0.95504665, 0.95921937, 0.96171468, 0.96411532, 0.96555798, 0.96682267, 0.96791697, 0.96887495, 0.97009799, 0.97091209, 0.97182085, 0.97247592, 0.97330895, 0.97411169, 0.97522492, 0.97624349, 0.97703865, 0.97805344, 0.9787085,  0.97970814, 0.98050709, 0.98116215, 0.98169605, 0.98215422, 0.98282064, 0.98333561, 0.98408155, 0.98462302, 0.9850774,  0.98559236, 0.98620956]
do18 = [ 0.,         0.16056074, 0.28120194, 0.42162678, 0.50672712, 0.6090657, 0.67770429, 0.72432823, 0.75369878, 0.77257335, 0.79536071, 0.81046643, 0.82570093, 0.83526511, 0.8436778,  0.85045037, 0.85671538, 0.86354856, 0.86865071, 0.87405968, 0.87793838, 0.88291175, 0.88762377, 0.89329788, 0.8979455,  0.90114997, 0.90485822, 0.908093,   0.91275577, 0.9163466, 0.91947531, 0.9218389,  0.92417597, 0.92678575, 0.92933494, 0.93250153, 0.93461133, 0.9370128,  0.93909987, 0.94223237]
do18_flip = [ 0.,         0.16883707, 0.29751975, 0.44822845, 0.54019227, 0.65162534, 0.72703651, 0.77880048, 0.81145125, 0.83235608, 0.8572987,  0.87379453, 0.89005553, 0.89994546, 0.9087142,  0.91544889, 0.92130482, 0.92735392, 0.93110763, 0.93478179, 0.9374143,  0.94031196, 0.94258464, 0.94494822, 0.94683833, 0.94819815, 0.94966023, 0.9508799,  0.95238366, 0.9536109, 0.95484572, 0.95586085, 0.95687598, 0.95783429, 0.95889866, 0.95989485 ,0.96054256, 0.96125467, 0.96184178, 0.96246297]

do18_2=[0.        ,0.1634906 ,0.29185579,0.44226792,0.53070409,0.63380273,0.70092104,0.74809259,0.77825954,0.79767078,0.82182757,0.83733527,0.85279781,0.86263731,0.87155093,0.87895153,0.88557787,0.89220421,0.89706267,0.90249536,0.90620211,0.91037987,0.91448343,0.91888701,0.92261311,0.92533914,0.92838132,0.93080087,0.93382047,0.93624647,0.93867247,0.94038551,0.94221147,0.94415033,0.94599564,0.9480442,0.94962174,0.95122832,0.95284136,0.95473506]

do18_flip_2=[0.       , 0.16696508,0.29925639,0.45492378,0.54699573,0.65483023
,0.72541011,0.77487862,0.80683604,0.8271409 ,0.85225583,0.86831196
,0.88401   ,0.89403984,0.90290185,0.91029277,0.91677716,0.92305186
,0.92760707,0.93243326,0.93557868,0.93901444,0.94213082,0.94529881
,0.94797645,0.94979918,0.95167675,0.95308977,0.95488023,0.9564352
,0.95790951,0.9590225 ,0.96009678,0.96113235,0.96207436,0.9629583
,0.96376805,0.96448746,0.96514558,0.96583595]


do18_3=[0.        ,0.17294405,0.30649873,0.46430716,0.55754496,0.6676076
,0.7376715 ,0.78612523,0.81564822,0.83392478,0.85612191,0.8698999
,0.88308645,0.89119194,0.89811902,0.90373776,0.90867543,0.91374752
,0.91722451,0.92112715,0.92367664,0.92654426,0.92964486,0.93310392
,0.9359805 ,0.93814465,0.94062693,0.94267907,0.94534057,0.94728069
,0.94925218,0.9506591 ,0.95215116,0.9538314 ,0.95551165,0.95746969
,0.95889902,0.96039555,0.96185176,0.9636485 ]

do18_flip_3 = [0.        ,0.17690943,0.31464455,0.47785216,0.57467896,0.68956726
,0.76329632,0.81412928,0.84552518,0.86491742,0.88823471,0.90257279
,0.91612227,0.92455037,0.93145505,0.93710514,0.94187703,0.94645626
,0.94945829,0.95259026,0.95447213,0.95638089,0.95819555,0.96005502
,0.96155156,0.96263588,0.96372915,0.96465665,0.96584402,0.96680288
,0.96773933,0.96851449,0.96923587,0.96997966,0.97077273,0.97152548
,0.97212141,0.97268597,0.97321469,0.97375684]



def read_pck(name):
    path = osp.join(saved_, 'pck_curves', name+'.npy')
    values = np.load(path)
    return values

def main(args):
    names = args.names
    n = args.n_pixel
    x = np.arange(n)
    if args.relative:
        x= x/256/np.sqrt(2)
    for name in names:
        y = read_pck(name)[:n]
        print('values for {}:\n {}'.format(name, y))
        plt.plot(x, y, label=name)
    plt.legend()
    name_full = ''.join(names)
    plt.title('PCK')
    plt.savefig(osp.join(saved_, 'pck_curves', name_full+'.png' ))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="get pose")
    parser.add_argument('--names', type=str, nargs='+')
    parser.add_argument('--n_pixel', type=int, default=40)
    parser.add_argument('--relative', action='store_true')

    main(parser.parse_args())
